/*
 * This file is generated by jOOQ.
 */
package com.mgt.earthquake.jooqmodel.tables.pojos


import jakarta.persistence.Column
import jakarta.persistence.Entity
import jakarta.persistence.GeneratedValue
import jakarta.persistence.GenerationType
import jakarta.persistence.Id
import jakarta.persistence.Table
import jakarta.persistence.UniqueConstraint
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import java.io.Serializable


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Entity
@Table(
    name = "quake",
    uniqueConstraints = [
        UniqueConstraint(name = "quake_quakeid_key", columnNames = [ "quakeid" ])
    ]
)
data class Quake(
    @get:Id
    @get:GeneratedValue(strategy = GenerationType.IDENTITY)
    @get:Column(name = "id", nullable = false, precision = 64)
    var id: Long? = null,
    @get:Column(name = "latitude", nullable = false, precision = 53)
    @get:NotNull
    var latitude: Double? = null,
    @get:Column(name = "longitude", nullable = false, precision = 53)
    @get:NotNull
    var longitude: Double? = null,
    @get:Column(name = "magnitude", nullable = false, precision = 53)
    @get:NotNull
    var magnitude: Double? = null,
    @get:Column(name = "quakeid", nullable = false, length = 200)
    @get:NotNull
    @get:Size(max = 200)
    var quakeid: String? = null,
    @get:Column(name = "quaketime", length = 200)
    @get:Size(max = 200)
    var quaketime: String? = null,
    @get:Column(name = "title", length = 200)
    @get:Size(max = 200)
    var title: String? = null
): Serializable {


    override fun toString(): String {
        val sb = StringBuilder("Quake (")

        sb.append(id)
        sb.append(", ").append(latitude)
        sb.append(", ").append(longitude)
        sb.append(", ").append(magnitude)
        sb.append(", ").append(quakeid)
        sb.append(", ").append(quaketime)
        sb.append(", ").append(title)

        sb.append(")")
        return sb.toString()
    }
}
